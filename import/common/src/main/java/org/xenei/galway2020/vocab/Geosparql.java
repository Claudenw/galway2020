/* CVS $Id: $ */
package org.xenei.galway2020.vocab; 
import org.apache.jena.rdf.model.*;
 
/**
 * Vocabulary definitions from file:/home/claude/git/galway2020/main/common/src/main/resources/vocabs/geosparql.rdf 
 * @author Auto-generated by schemagen on 11 Jul 2015 10:01 
 */
public class Geosparql {
    /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://www.opengis.net/ont/geosparql#";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
    
    /** <p>The ontology's owl:versionInfo as a string</p> */
    public static final String VERSION_INFO = "OGC GeoSPARQL 1.0";
    
    /** <p>The GML serialization of a geometry</p> */
    public static final Property asGML = m_model.createProperty( "http://www.opengis.net/ont/geosparql#asGML" );
    
    /** <p>The WKT serialization of a geometry</p> */
    public static final Property asWKT = m_model.createProperty( "http://www.opengis.net/ont/geosparql#asWKT" );
    
    /** <p>The number of measurements or axes needed to describe the position of this 
     *  geometry in a coordinate system.</p>
     */
    public static final Property coordinateDimension = m_model.createProperty( "http://www.opengis.net/ont/geosparql#coordinateDimension" );
    
    /** <p>The default geometry to be used in spatial calculations. It is Usually the 
     *  most detailed geometry.</p>
     */
    public static final Property defaultGeometry = m_model.createProperty( "http://www.opengis.net/ont/geosparql#defaultGeometry" );
    
    /** <p>The topological dimension of this geometric object, which must be less than 
     *  or equal to the coordinate dimension. In non-homogeneous collections, this 
     *  will return the largest topological dimension of the contained objects.</p>
     */
    public static final Property dimension = m_model.createProperty( "http://www.opengis.net/ont/geosparql#dimension" );
    
    /** <p>Exists if the subject SpatialObject spatially contains the object SpatialObject. 
     *  DE-9IM: T*TFF*FF*</p>
     */
    public static final Property ehContains = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehContains" );
    
    /** <p>Exists if the subject SpatialObject is spatially covered by the object SpatialObject. 
     *  DE-9IM: TFF*TFT**</p>
     */
    public static final Property ehCoveredBy = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehCoveredBy" );
    
    /** <p>Exists if the subject SpatialObject spatially covers the object SpatialObject. 
     *  DE-9IM: T*TFT*FF*</p>
     */
    public static final Property ehCovers = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehCovers" );
    
    /** <p>Exists if the subject SpatialObject is spatially disjoint from the object 
     *  SpatialObject. DE-9IM: FF*FF****</p>
     */
    public static final Property ehDisjoint = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehDisjoint" );
    
    /** <p>Exists if the subject SpatialObject spatially equals the object SpatialObject. 
     *  DE-9IM: TFFFTFFFT</p>
     */
    public static final Property ehEquals = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehEquals" );
    
    /** <p>Exists if the subject SpatialObject is spatially inside the object SpatialObject. 
     *  DE-9IM: TFF*FFT**</p>
     */
    public static final Property ehInside = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehInside" );
    
    /** <p>Exists if the subject SpatialObject spatially meets the object SpatialObject. 
     *  DE-9IM: FT******* ^ F**T***** ^ F***T****</p>
     */
    public static final Property ehMeet = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehMeet" );
    
    /** <p>Exists if the subject SpatialObject spatially overlaps the object SpatialObject. 
     *  DE-9IM: T*T***T**</p>
     */
    public static final Property ehOverlap = m_model.createProperty( "http://www.opengis.net/ont/geosparql#ehOverlap" );
    
    /** <p>A spatial representation for a given feature.</p> */
    public static final Property hasGeometry = m_model.createProperty( "http://www.opengis.net/ont/geosparql#hasGeometry" );
    
    /** <p>Connects a geometry object with its text-based serialization.</p> */
    public static final Property hasSerialization = m_model.createProperty( "http://www.opengis.net/ont/geosparql#hasSerialization" );
    
    /** <p>(true) if this geometric object is the empty Geometry. If true, then this 
     *  geometric object represents the empty point set for the coordinate space.</p>
     */
    public static final Property isEmpty = m_model.createProperty( "http://www.opengis.net/ont/geosparql#isEmpty" );
    
    /** <p>(true) if this geometric object has no anomalous geometric points, such as 
     *  self intersection or self tangency.</p>
     */
    public static final Property isSimple = m_model.createProperty( "http://www.opengis.net/ont/geosparql#isSimple" );
    
    /** <p>Exists if the subject SpatialObject is spatially disjoint from the object 
     *  SpatialObject. DE-9IM: FFTFFTTTT</p>
     */
    public static final Property rcc8dc = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8dc" );
    
    /** <p>Exists if the subject SpatialObject spatially meets the object SpatialObject. 
     *  DE-9IM: FFTFTTTTT</p>
     */
    public static final Property rcc8ec = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8ec" );
    
    /** <p>Exists if the subject SpatialObject spatially equals the object SpatialObject. 
     *  DE-9IM: TFFFTFFFT</p>
     */
    public static final Property rcc8eq = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8eq" );
    
    /** <p>Exists if the subject SpatialObject is spatially inside the object SpatialObject. 
     *  DE-9IM: TFFTFFTTT</p>
     */
    public static final Property rcc8ntpp = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8ntpp" );
    
    /** <p>Exists if the subject SpatialObject spatially contains the object SpatialObject. 
     *  DE-9IM: TTTFFTFFT</p>
     */
    public static final Property rcc8ntppi = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8ntppi" );
    
    /** <p>Exists if the subject SpatialObject spatially overlaps the object SpatialObject. 
     *  DE-9IM: TTTTTTTTT</p>
     */
    public static final Property rcc8po = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8po" );
    
    /** <p>Exists if the subject SpatialObject is spatially covered by the object SpatialObject. 
     *  DE-9IM: TFFTTFTTT</p>
     */
    public static final Property rcc8tpp = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8tpp" );
    
    /** <p>Exists if the subject SpatialObject spatially covers the object SpatialObject. 
     *  DE-9IM: TTTFTTFFT</p>
     */
    public static final Property rcc8tppi = m_model.createProperty( "http://www.opengis.net/ont/geosparql#rcc8tppi" );
    
    /** <p>Exists if the subject SpatialObject spatially contains the object SpatialObject. 
     *  DE-9IM: T*****FF*</p>
     */
    public static final Property sfContains = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfContains" );
    
    /** <p>Exists if the subject SpatialObject spatially crosses the object SpatialObject. 
     *  DE-9IM: T*T******</p>
     */
    public static final Property sfCrosses = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfCrosses" );
    
    /** <p>Exists if the subject SpatialObject is spatially disjoint from the object 
     *  SpatialObject. DE-9IM: FF*FF****</p>
     */
    public static final Property sfDisjoint = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfDisjoint" );
    
    /** <p>Exists if the subject SpatialObject spatially equals the object SpatialObject. 
     *  DE-9IM: TFFFTFFFT</p>
     */
    public static final Property sfEquals = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfEquals" );
    
    /** <p>Exists if the subject SpatialObject is not spatially disjoint from the object 
     *  SpatialObject. DE-9IM: T******** ^ *T******* ^ ***T***** ^ ****T****</p>
     */
    public static final Property sfIntersects = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfIntersects" );
    
    /** <p>Exists if the subject SpatialObject spatially overlaps the object SpatialObject. 
     *  DE-9IM: T*T***T**</p>
     */
    public static final Property sfOverlaps = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfOverlaps" );
    
    /** <p>Exists if the subject SpatialObject spatially touches the object SpatialObject. 
     *  DE-9IM: FT******* ^ F**T***** ^ F***T****</p>
     */
    public static final Property sfTouches = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfTouches" );
    
    /** <p>Exists if the subject SpatialObject is spatially within the object SpatialObject. 
     *  DE-9IM: T*F**F***</p>
     */
    public static final Property sfWithin = m_model.createProperty( "http://www.opengis.net/ont/geosparql#sfWithin" );
    
    /** <p>The number of measurements or axes needed to describe the spatial position 
     *  of this geometry in a coordinate system.</p>
     */
    public static final Property spatialDimension = m_model.createProperty( "http://www.opengis.net/ont/geosparql#spatialDimension" );
    
    /** <p>This class represents the top-level feature type. This class is equivalent 
     *  to GFI_Feature defined in ISO 19156:2011, and it is superclass of all feature 
     *  types.</p>
     */
    public static final Resource Feature = m_model.createResource( "http://www.opengis.net/ont/geosparql#Feature" );
    
    /** <p>The class represents the top-level geometry type. This class is equivalent 
     *  to the UML class GM_Object defined in ISO 19107, and it is superclass of all 
     *  geometry types.</p>
     */
    public static final Resource Geometry = m_model.createResource( "http://www.opengis.net/ont/geosparql#Geometry" );
    
    /** <p>The class spatial-object represents everything that can have a spatial representation. 
     *  It is superclass of feature and geometry.</p>
     */
    public static final Resource SpatialObject = m_model.createResource( "http://www.opengis.net/ont/geosparql#SpatialObject" );
    
    /** <p>A GML serialization of a geometry object.</p> */
    public static final Resource gmlLiteral = m_model.createResource( "http://www.opengis.net/ont/geosparql#gmlLiteral" );
    
    /** <p>A Well-known Text serialization of a geometry object.</p> */
    public static final Resource wktLiteral = m_model.createResource( "http://www.opengis.net/ont/geosparql#wktLiteral" );
    
}
